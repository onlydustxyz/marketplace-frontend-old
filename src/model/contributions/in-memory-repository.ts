import { inMemoryApplications } from "../applications/in-memory-repository";
import { inMermoryAssignements } from "../assingments/in-memory-repository";
import {
  ContributionContextEnum,
  ContributionDifficultyEnum,
  ContributionDurationEnum,
  ContributionRepository,
  ContributionTypeEnum,
  ContributionDto,
  ListParams,
} from "./repository";

export class InMemoryContributionRepository implements ContributionRepository {
  private contributions: ContributionDto[] = [
    {
      id: "1",
      project_id: "1",
      title: "Contribution 1",
      description: "Description 1",
      github_link: "https://example.com/contributions/1",
      gate: 0,
      closed: false,
      available_slot_count: 1,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "1") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "1") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "2",
      project_id: "3",
      title: "Contribution 2",
      description: "Description 2",
      github_link: "https://example.com/contributions/2",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "2") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "2") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.INTERMEDIATE,
        duration: ContributionDurationEnum.FEW_DAYS,
        technology: "javascript",
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "3",
      project_id: "3",
      title: "Contribution 3",
      description: "Description 3",
      github_link: "https://example.com/contributions/3",
      gate: 10,
      closed: false,
      available_slot_count: 1,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "3") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "3") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: "rust",
        type: ContributionTypeEnum.DOCUMENTATION,
      },
    },
    {
      id: "4",
      project_id: "3",
      title: "Contribution 4",
      description: "Description 4",
      github_link: "https://example.com/contributions/4",
      gate: 0,
      closed: false,
      available_slot_count: 1,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "4") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "4") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: "rust",
        type: ContributionTypeEnum.DOCUMENTATION,
      },
    },
    {
      id: "5",
      project_id: "3",
      title: "Contribution 5",
      description: "Description 5",
      github_link: "https://example.com/contributions/5",
      gate: 1000000000,
      closed: false,
      available_slot_count: 1,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "5") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "5") || [],
      metadata: {
        context: ContributionContextEnum.INTRICATED,
        difficulty: ContributionDifficultyEnum.HARD,
        duration: ContributionDurationEnum.WEEKS,
        technology: "rust",
        type: ContributionTypeEnum.REFACTOR,
      },
    },
    {
      id: "6",
      project_id: "1",
      title: "Contribution 6",
      description: "Description 6",
      github_link: "https://example.com/contributions/6",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "6") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "6") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "7",
      project_id: "1",
      title: "Contribution 7",
      description: "Description 7",
      github_link: "https://example.com/contributions/7",
      gate: 10,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 3,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "7") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "7") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: "python",
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "8",
      project_id: "3",
      title: "Contribution 8",
      description: "Description 8",
      github_link: "https://example.com/contributions/8",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 2,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "8") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "8") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "9",
      project_id: "3",
      title: "Contribution 9",
      description: "Description 9",
      github_link: "https://example.com/contributions/9",
      gate: 0,
      closed: true,
      available_slot_count: 1,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "9") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "9") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "10",
      project_id: "3",
      title: "Contribution 10",
      description: "Description 10",
      github_link: "https://example.com/contributions/10",
      gate: 0,
      closed: true,
      available_slot_count: 0,
      max_slot_count: 2,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "10") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "10") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "11",
      project_id: "3",
      title: "Contribution 11",
      description: "Description 11",
      github_link: "https://example.com/contributions/11",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "11") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "11") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "12",
      project_id: "3",
      title: "Contribution 12",
      description: "Description 12",
      github_link: "https://example.com/contributions/12",
      gate: 0,
      closed: false,
      available_slot_count: 10,
      max_slot_count: 10,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "12") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "12") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "13",
      project_id: "3",
      title: "Contribution 13",
      description: "Description 13",
      github_link: "https://example.com/contributions/13",
      gate: 0,
      closed: false,
      available_slot_count: 1,
      max_slot_count: 3,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "13") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "13") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "14",
      project_id: "3",
      title: "Contribution 14",
      description: "Description 14",
      github_link: "https://example.com/contributions/14",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 2,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "14") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "14") || [],
      metadata: {
        context: ContributionContextEnum.ISOLATED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: undefined,
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "15",
      project_id: "4",
      title: "Contribution 15",
      description: "Description 15",
      github_link: "https://example.com/contributions/15",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "15") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "15") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.INTERMEDIATE,
        duration: ContributionDurationEnum.FEW_DAYS,
        technology: "javascript",
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "16",
      project_id: "4",
      title: "Contribution 16",
      description: "Description 16",
      github_link: "https://example.com/contributions/16",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "16") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "16") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: "rust",
        type: ContributionTypeEnum.DOCUMENTATION,
      },
    },
    {
      id: "17",
      project_id: "5",
      title: "Contribution 17",
      description: "Description 17",
      github_link: "https://example.com/contributions/17",
      gate: 0,
      closed: false,
      available_slot_count: 0,
      max_slot_count: 1,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "17") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "17") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.INTERMEDIATE,
        duration: ContributionDurationEnum.FEW_DAYS,
        technology: "javascript",
        type: ContributionTypeEnum.FEATURE,
      },
    },
    {
      id: "18",
      project_id: "5",
      title: "Contribution 18",
      description: "Description 18",
      github_link: "https://example.com/contributions/18",
      gate: 0,
      closed: true,
      available_slot_count: 4,
      max_slot_count: 5,
      assignements: inMermoryAssignements.filter(assignment => assignment.contribution_id === "18") || [],
      pending_applications: inMemoryApplications.filter(application => application.contribution_id === "18") || [],
      metadata: {
        context: ContributionContextEnum.COUPLED,
        difficulty: ContributionDifficultyEnum.EASY,
        duration: ContributionDurationEnum.UNDER_A_DAY,
        technology: "rust",
        type: ContributionTypeEnum.DOCUMENTATION,
      },
    },
  ];

  public async list({ contributorAccountAddress }: ListParams = {}): Promise<ContributionDto[]> {
    if (!contributorAccountAddress) {
      return this.contributions;
    }

    return this.contributions.filter(
      contribution =>
        contribution.assignements.some(
          assignement =>
            parseInt(assignement.contributor_account_address, 16) === parseInt(contributorAccountAddress, 16)
        ) ||
        contribution.pending_applications.some(
          application =>
            parseInt(application.contributor_account_address, 16) === parseInt(contributorAccountAddress, 16)
        )
    );
  }
}
